import java.util.LinkedHashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Iterator;

public class UserCollections {
private static LinkedHashSet<User>listOfAllUsers;
//private Object userlist;
	
	public UserCollections() {
		listOfAllUsers = new LinkedHashSet<User>();
	}
	/**
	 * create a method as createNewBlundrUser 
	 * @param name
	 * @param age
	 * @param designation
	 * @param hobby
	 * @param hobbies
	 * @return
	 */
	public boolean createNewBlundrUser(String name,int age, String designation,String hobby,String[] hobbies) {
		try {
			User newUser = new User(name,age,designation,hobby,hobbies);
			listOfAllUsers.add(newUser);
			return true;
		}catch (Exception e) {
			return false;
		}
	}
	
//	private boolean vaidateName(String name) {
//		return pattern=Pattern.compile("");
//		Matcher match=Pattern.match(name);
//		if(match.find())
//			{
//			
//			boolean isDuplicateFound=false;
//			for(int i=0;i<this.userlist.size();i++) {
//				
//			}
			}
	}
	/**
	 * This is a helper method to print the all users
	 */
	public void printAllUsers() {
		for (Iterator <User>iter = listOfAllUsers.iterator();
			iter.hasNext();){
				User currentUser =(User) iter.next();
				System.out.println(currentUser);
			}	
		}
	/**
	 * This is a helper method to print to search the getmatch argument
	 * @param searchString
	 * @return
	 */
	public LinkedHashSet<User> getMatch(String searchString) {
		LinkedHashSet<User>returnSet = new LinkedHashSet<User>();
		for(User currUser : listOfAllUsers) {
			
//			System.out.println(currUser.getname());
//			System.out.println(currUser.hobby());
		
//			System.out.println(searchString);
			
			if(currUser.getname().contains(searchString)|| currUser.hobby().contains(searchString)){
				returnSet.add(currUser);
				//System.out.println("Matched"); 
				System.out.println(currUser.getname());
//			}else {
//				System.out.println("Mismatch");
			}
			//System.out.println("====================="); 
		}
	return returnSet;
 }	
}